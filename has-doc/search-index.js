var searchIndex = {};
searchIndex['has'] = {"items":[[8,"Has","has","Trait to model a \"has a\" relationship between implementing structs and the generic parameter\nprovided. This trait provides only a function to retrieve a non-mutable reference to the\ncontained object. If a mutable reference is desired instead, use `HasMut`.",null,null],[10,"get_ref","","",0,{"inputs":[{"name":"has"}],"output":{"name":"t"}}],[8,"HasMut","","Trait to model a \"has a\" relationship between implementing structs and the generic parameter\nprovided. This trait provides methods to retrieve either a mutable or immutable reference to\nthe contained object.",null,null],[10,"get_mut","","",1,{"inputs":[{"name":"hasmut"}],"output":{"name":"t"}}],[14,"impl_has!","","Macro to consisely implement `HasMut` for a struct. The macro takes as argument the struct\nname, the type of the contained object and the identifier, within the struct, of the contained\nobject; in that order.",null,null]],"paths":[[8,"Has"],[8,"HasMut"]]};
initSearch(searchIndex);
